PACKAGE OPTIONALTASK; 
 
// СОЗДАТЬ и ЗАПОЛНИТЬ ФАЙЛ СЛУЧАЙНЫМИ ЦЕЛЫМИ ЧИСЛАМИ. ОТСОРТИРОВАТЬ СОДЕРЖИМОЕ ФАЙЛА по ВОЗРАСТАНИЮ. 
 
IMPORT JAVA.IO.*; 
IMPORT JAVA.UTIL.ARRAYLIST; 
IMPORT JAVA.UTIL.COMPARATOR; 
IMPORT JAVA.UTIL.LIST; 
IMPORT JAVA.UTIL.RANDOM; 
 
PUBLIC CLASS TASK1 { 
    PRIVATE STATIC VOID MAIN(STRING[] ARGS) { 
 
        PRIVATE INT COUNTREPUBLIC = 0; 
        FILE FILE = NEW FILE("SRC\\OPTIONALTASK\\FILEFORTASK1.TXT"); 
 
        WRITERANDOMNUMBERSTOFILE(FILE); 
        SORTNUMBERSINFILE(FILE); 
    } 
 
    PRIVATE STATIC VOID WRITERANDOMNUMBERSTOFILE(FILE FILE) { 
        RANDOM RANDOM = NEW RANDOM(); 
 
        TRY (FILEWRITER FILEWRITER = NEW FILEWRITER(FILE)) { 
            FOR (INT i = 0; i < 20; I++) { 
                INT RANDOMNUMBER = RANDOM.NEXTINT(); 
                SYSTEM.OUT.PRINTLN(RANDOMNUMBER); 
                FILEWRITER.WRITE(RANDOMNUMBER + "\N"); 
            } 
        } CATCH (IOEXCEPTION e) { 
            E.GETMESSAGE(); 
        } 
    } 
 
    PRIVATE STATIC VOID SORTNUMBERSINFILE(FILE FILE) { 
        LIST<INTEGER> LISTOFNUMBERS = NEW ARRAYLIST<>(); 
        TRY (BUFFEREDREADER BUFFEREDREADER = NEW BUFFEREDREADER(NEW FILEREADER(FILE))) { 
            WHILE (BUFFEREDREADER.READY()) { 
                LISTOFNUMBERS.ADD(INTEGER.PARSEINT(BUFFEREDREADER.READLINE())); 
            } 
        } CATCH (IOEXCEPTION e) { 
            E.GETMESSAGE(); 
        } 
 
        TRY (PRINTWRITER PRINTWRITER = NEW PRINTWRITER(FILE)) { 
            LISTOFNUMBERS.STREAM().SORTED(COMPARATOR.COMPARINGINT(X -> X)).FOREACH(NUMBER -> { 
            PRINTWRITER.PRINT(NUMBER + "\N"); 
            }); 
        } CATCH (IOEXCEPTION e) { 
            E.GETMESSAGE(); 
        } 
    } 
} 
 
